#include<stdio.h>
#include<stdlib.h>
#define MAX 100https://github.com/BuleSky233/a-string-menu

int strlen(char*a)
{
	int i = 0;
	while (*a++&&++i)
		continue;
	return i;
}

char* strcpy(char* origin,const char* turn)
{
	char*p = origin;
	while (*p++ = *turn++);
	return origin;
}

char* strncpy(char*origin, const char*turn, int n)
{
	char*p = origin;
	while (n--&&*turn)
	{
		*(p++) = *(turn++);
	}
	if (n > 0)
	{
		*p = *turn;
	}
	return origin;
}

int strcmp(char*a, char*b)
{
	char cn;
	while(!(cn=(*a-*b))&&*b)
	{
		a++;
		b++;
	}
	if (!*b)
		return 0;
	return  (cn > 0) ? 1 : -1;
	
}

void Print(char*a[], int n)
{
	for (int i = 0; i < n; i++)
		printf("%s ", a[i]);
	printf("\n");
}

void PrintWithAsc(char*a[],int n)
{
	for(int i=n-1;i>0;i--)
		for (int j = 0; j < i; j++)
		{
			if (strcmp(a[j], a[j + 1]) == 1)
			{
				char*p=a[j + 1];
				a[j + 1] = a[j];
				a[j] = p;
				
			}
		}
	Print(a, n);
}

void PrintWithLength(char*a[], int n)
{
	for(int i=n-1;i>0;i--)
		for (int j = 0; j < i; j++)
		{
			if (strlen(a[j]) > strlen(a[j + 1]))
			{
				char*p = a[j + 1];
				a[j + 1] = a[j];
				a[j] = p;
			}
		}
	Print(a, n);
}

void PrintWithSameLength(char*a[], int n)
{
	char put[MAX]; int j = 0;
	int firstlength = strlen(a[0]);
	for (int i = 0; i < n; i++)
	{
		char*p = a[i];
		while (*p)
			put[j++] = *p++;
	}
	for (int current = 0; current < j; current++)
	{
		if (current&&current%firstlength == 0)
			putchar(' ');
		putchar(put[current]);
	}
	putchar('\n');
}

int main()
{
	char ch;int  pre; int i = 0; int j = 0;
	printf("Please enter 10 strings or you can enter '#' to stop input\n");
	char putin[10][MAX];             //数组存放输入
	char* realword[10];              //指针数组储存数据，方便作为实参传入函数。注意数组有效个数不一定为10，取决于后面计算得到的length，传入函数时传入length，无需理后面的无效数据
	char* helpword[10];
	for (; i < 10; i++)
	{
		j = 0;
		while ((ch = getchar()) == ' ')
			continue;
		while (ch != '#'&&ch != ' '&&ch!='\n')
		{
			putin[i][j++] = ch;
			pre = i;                         //用i处理一种特殊情况，即最后一个单词为一个单独的'#'，则其不算一个单词
			ch = getchar();
			
		}
		putin[i][j] = '\0';
		if (ch == '#')
			break;
	}
	int length = (pre==i)?i + 1:i;            //统计单词数
	
	for (int k = 0; k < length; k++)
	{
		realword[k] = putin[k];
		helpword[k] = putin[k];
	}
	do
	{ 
		while (ch != '\n')                    //处理每次提交输入的空格或者是多余输入
		{
			ch = getchar();
		}
	printf("\n*****************************************\n");
	printf("A.Print all strings\tB.Print strings in ASCII order\nC.Print strings from short to long\t");
	printf("D.Print in the length of first word\tE.Quit");
	printf("\n*****************************************\n");
	printf("Choose what you want to do(enter 'E' to quit)\n ");
	scanf("%c", &ch);                     
	switch (ch)
	{
	case 'a':
	case 'A':
		Print(realword, length);
		break;
	case 'b':
	case 'B':
		PrintWithAsc(helpword, length);
		break;
	case 'c':
	case 'C':
		PrintWithLength(helpword, length);
		break;
	case 'd':
	case 'D':
		PrintWithSameLength(realword, length);
		break;
	case 'e':
	case 'E':
		break;
	default:
		printf("Please enter between A and E\n");
		break;
	}
	}while (ch != 'E'&&ch != 'e');
	

	
	return 0;
}
